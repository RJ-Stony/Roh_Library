# -*- coding: utf-8 -*-
"""Testing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MgvnRZHwRkFwx8h_MqCPzmLQ66aW7U12
"""

# -*- coding: utf-8 -*-
"""Testing.ipynb
Automatically generated by Colaboratory.
Original file is located at
    https://colab.research.google.com/drive/1MgvnRZHwRkFwx8h_MqCPzmLQ66aW7U12
"""

if __name__ == '__main__':
  !pip install konlpy

  import pandas as pd
  from konlpy.tag import Okt

  filename = 'https://raw.githubusercontent.com/Roh-2040/Roh_Library/main/CCM_Info.csv'
  df = pd.read_csv(filename)

  def keyword_extractor(tagger, lyrics, word):
    tokens = tagger.nouns(lyrics)
    tokens = [token for token in tokens if len(token) > 1] # 한 글자인 단어는 제외
    count_dict = [(token, lyrics.count(token)) for token in tokens]
    if word == '사랑' or '우리':
      ranked_words = sorted(count_dict, key=lambda x:x[1], reverse=True)[:1]
    elif word == '은혜':
      ranked_words = sorted(count_dict, key=lambda x:x[1], reverse=True)[:5]
    else:
      ranked_words = sorted(count_dict, key=lambda x:x[1], reverse=True)[:30]
    return [keyword for keyword, freq in ranked_words]

  keyword = input("키워드를 입력해주세요(한 글자 이상) : ")
  sum = 0

  print("찬양을 검색중입니다...")
  print("")

  try:
    for i in range(len(df)):
      okt = Okt()
      lyrics = df['가사'].loc[i]
      lyrics = keyword_extractor(okt, lyrics, keyword)
      if keyword in lyrics:
        sum += 1
        if df['아티스트'].loc[i] == 'Disciples':
          df['아티스트'].loc[i] = '디사이플스'
        elif df['아티스트'].loc[i] == '아이자야씩스티원(Isaiah6tyOne)':
          df['아티스트'].loc[i] = '아이자야씩스티원'
        elif df['아티스트'].loc[i] == '아이자야씩스티원 예술학교':
          df['아티스트'].loc[i] = '아이자야씩스티원'
        print(df['아티스트'].loc[i] + "의 " + df['타이틀'].loc[i])
      if i == df.index.stop:
        break

  except TypeError as T:
    if sum == 0:
      print("검색 결과가 없습니다.")
    else:
      print("")
      print("키워드를 통해 검색된 " + str(sum) + "개의 추천 찬양입니다.")

